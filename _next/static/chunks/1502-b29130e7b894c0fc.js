"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1502],{58732:function(e,n,t){var i=t(85893),a=t(9008),s=t.n(a);t(67294);var r=t(54705),u=t(78167);n.Z=e=>{let{title:n}=e;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s(),{children:[(0,i.jsx)("title",{children:"".concat(n," - LIFE20")}),(0,i.jsx)("meta",{name:"".concat(n," - LIFE20"),content:"A Web3 DApp for Life20 token management"})]}),(0,i.jsxs)("header",{className:"flex justify-between items-center py-2 px-4",children:[(0,i.jsx)(u.vP,{className:"-ml-1"}),(0,i.jsx)(r.NL,{})]})]})}},94782:function(e,n,t){t.d(n,{dI:function(){return p},fT:function(){return y},s4:function(){return o},WZ:function(){return d},Bk:function(){return l},qd:function(){return m},Xo:function(){return c}});var i=t(89810),a=t(75593),s=t(83540);let r=[{type:"constructor",inputs:[{name:"stakeAddress_",type:"address",internalType:"address"},{name:"originBlocks",type:"uint256",internalType:"uint256"},{name:"roundBlocks",type:"uint256",internalType:"uint256"},{name:"submitMinPerThousand",type:"uint256",internalType:"uint256"}],stateMutability:"nonpayable"},{type:"function",name:"SUBMIT_MIN_PER_THOUSAND",inputs:[],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"actionIdsByAuthor",inputs:[{name:"tokenAddress",type:"address",internalType:"address"},{name:"author",type:"address",internalType:"address"}],outputs:[{name:"",type:"uint256[]",internalType:"uint256[]"}],stateMutability:"view"},{type:"function",name:"actionInfo",inputs:[{name:"tokenAddress",type:"address",internalType:"address"},{name:"actionId",type:"uint256",internalType:"uint256"}],outputs:[{name:"",type:"tuple",internalType:"struct ActionInfo",components:[{name:"head",type:"tuple",internalType:"struct ActionHead",components:[{name:"id",type:"uint256",internalType:"uint256"},{name:"author",type:"address",internalType:"address"},{name:"createAtBlock",type:"uint256",internalType:"uint256"}]},{name:"body",type:"tuple",internalType:"struct ActionBody",components:[{name:"maxStake",type:"uint256",internalType:"uint256"},{name:"maxRandomAccounts",type:"uint256",internalType:"uint256"},{name:"whiteList",type:"address[]",internalType:"address[]"},{name:"action",type:"string",internalType:"string"},{name:"consensus",type:"string",internalType:"string"},{name:"verificationRule",type:"string",internalType:"string"},{name:"verificationInfoGuide",type:"string",internalType:"string"}]}]}],stateMutability:"view"},{type:"function",name:"actionInfos",inputs:[{name:"",type:"address",internalType:"address"},{name:"",type:"uint256",internalType:"uint256"}],outputs:[{name:"head",type:"tuple",internalType:"struct ActionHead",components:[{name:"id",type:"uint256",internalType:"uint256"},{name:"author",type:"address",internalType:"address"},{name:"createAtBlock",type:"uint256",internalType:"uint256"}]},{name:"body",type:"tuple",internalType:"struct ActionBody",components:[{name:"maxStake",type:"uint256",internalType:"uint256"},{name:"maxRandomAccounts",type:"uint256",internalType:"uint256"},{name:"whiteList",type:"address[]",internalType:"address[]"},{name:"action",type:"string",internalType:"string"},{name:"consensus",type:"string",internalType:"string"},{name:"verificationRule",type:"string",internalType:"string"},{name:"verificationInfoGuide",type:"string",internalType:"string"}]}],stateMutability:"view"},{type:"function",name:"actionInfosByIds",inputs:[{name:"tokenAddress",type:"address",internalType:"address"},{name:"actionIds",type:"uint256[]",internalType:"uint256[]"}],outputs:[{name:"",type:"tuple[]",internalType:"struct ActionInfo[]",components:[{name:"head",type:"tuple",internalType:"struct ActionHead",components:[{name:"id",type:"uint256",internalType:"uint256"},{name:"author",type:"address",internalType:"address"},{name:"createAtBlock",type:"uint256",internalType:"uint256"}]},{name:"body",type:"tuple",internalType:"struct ActionBody",components:[{name:"maxStake",type:"uint256",internalType:"uint256"},{name:"maxRandomAccounts",type:"uint256",internalType:"uint256"},{name:"whiteList",type:"address[]",internalType:"address[]"},{name:"action",type:"string",internalType:"string"},{name:"consensus",type:"string",internalType:"string"},{name:"verificationRule",type:"string",internalType:"string"},{name:"verificationInfoGuide",type:"string",internalType:"string"}]}]}],stateMutability:"view"},{type:"function",name:"actionInfosByPage",inputs:[{name:"tokenAddress",type:"address",internalType:"address"},{name:"start",type:"uint256",internalType:"uint256"},{name:"end",type:"uint256",internalType:"uint256"},{name:"reverse",type:"bool",internalType:"bool"}],outputs:[{name:"",type:"tuple[]",internalType:"struct ActionInfo[]",components:[{name:"head",type:"tuple",internalType:"struct ActionHead",components:[{name:"id",type:"uint256",internalType:"uint256"},{name:"author",type:"address",internalType:"address"},{name:"createAtBlock",type:"uint256",internalType:"uint256"}]},{name:"body",type:"tuple",internalType:"struct ActionBody",components:[{name:"maxStake",type:"uint256",internalType:"uint256"},{name:"maxRandomAccounts",type:"uint256",internalType:"uint256"},{name:"whiteList",type:"address[]",internalType:"address[]"},{name:"action",type:"string",internalType:"string"},{name:"consensus",type:"string",internalType:"string"},{name:"verificationRule",type:"string",internalType:"string"},{name:"verificationInfoGuide",type:"string",internalType:"string"}]}]}],stateMutability:"view"},{type:"function",name:"actionNum",inputs:[{name:"tokenAddress",type:"address",internalType:"address"}],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"actionSubmits",inputs:[{name:"tokenAddress",type:"address",internalType:"address"},{name:"round",type:"uint256",internalType:"uint256"}],outputs:[{name:"",type:"tuple[]",internalType:"struct ActionSubmit[]",components:[{name:"submitter",type:"address",internalType:"address"},{name:"actionId",type:"uint256",internalType:"uint256"}]}],stateMutability:"view"},{type:"function",name:"authorActionIds",inputs:[{name:"",type:"address",internalType:"address"},{name:"",type:"address",internalType:"address"},{name:"",type:"uint256",internalType:"uint256"}],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"canSubmit",inputs:[{name:"tokenAddress",type:"address",internalType:"address"},{name:"accountAddress",type:"address",internalType:"address"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"currentRound",inputs:[],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"isSubmitted",inputs:[{name:"tokenAddress",type:"address",internalType:"address"},{name:"round",type:"uint256",internalType:"uint256"},{name:"actionId",type:"uint256",internalType:"uint256"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"originBlocks",inputs:[],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"roundBlocks",inputs:[],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"roundByBlockNumber",inputs:[{name:"blockNumber",type:"uint256",internalType:"uint256"}],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"roundRange",inputs:[{name:"round",type:"uint256",internalType:"uint256"}],outputs:[{name:"start",type:"uint256",internalType:"uint256"},{name:"end",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"stakeAddress",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"submit",inputs:[{name:"tokenAddress",type:"address",internalType:"address"},{name:"actionId",type:"uint256",internalType:"uint256"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"submitNewAction",inputs:[{name:"tokenAddress",type:"address",internalType:"address"},{name:"actionBody",type:"tuple",internalType:"struct ActionBody",components:[{name:"maxStake",type:"uint256",internalType:"uint256"},{name:"maxRandomAccounts",type:"uint256",internalType:"uint256"},{name:"whiteList",type:"address[]",internalType:"address[]"},{name:"action",type:"string",internalType:"string"},{name:"consensus",type:"string",internalType:"string"},{name:"verificationRule",type:"string",internalType:"string"},{name:"verificationInfoGuide",type:"string",internalType:"string"}]}],outputs:[{name:"actionId",type:"uint256",internalType:"uint256"}],stateMutability:"nonpayable"}],u="0x48dA69Bc34fe5067E103D67759239fFc13af2C13",p=(e,n)=>{let{data:t,isPending:a,error:s}=(0,i.u)({address:u,abi:r,functionName:"actionInfo",args:[e,n||0n],query:{enabled:!!e&&void 0!==n}});return{actionInfo:t,isPending:a,error:s}},y=(e,n)=>{let{data:t,isPending:a,error:s}=(0,i.u)({address:u,abi:r,functionName:"actionInfosByIds",args:[e,n],query:{enabled:!!e&&n.length>0}});return{actionInfos:t,isPending:a,error:s}},o=(e,n,t,a)=>{let{data:s,isPending:p,error:y}=(0,i.u)({address:u,abi:r,functionName:"actionInfosByPage",args:[e,n,t,a],query:{enabled:!!e}});return{actionInfos:s,isPending:p,error:y}},d=(e,n)=>{let{data:t,isPending:a,error:s}=(0,i.u)({address:u,abi:r,functionName:"actionSubmits",args:[e,n],query:{enabled:!!e&&!!n}});return{actionSubmits:t,isPending:a,error:s}},l=()=>{let{data:e,isPending:n,error:t}=(0,i.u)({address:u,abi:r,functionName:"currentRound",args:[]});return{currentRound:e,isPending:n,error:t}};function m(){let{writeContract:e,isPending:n,data:t,error:i}=(0,a.S)(),p=async(n,t)=>{try{await e({address:u,abi:r,functionName:"submit",args:[n,t]})}catch(e){console.error("Submit failed:",e)}},{isLoading:y,isSuccess:o}=(0,s.A)({hash:t});return{submit:p,writeData:t,isWriting:n,writeError:i,isConfirming:y,isConfirmed:o}}function c(){let{writeContract:e,isPending:n,data:t,error:i}=(0,a.S)(),p=async(n,t)=>{try{return await e({address:u,abi:r,functionName:"submitNewAction",args:[n,t]})}catch(e){console.error("Submit New Action failed:",e)}},{isLoading:y,isSuccess:o}=(0,s.A)({hash:t});return{submitNewAction:p,writeData:t,isWriting:n,writeError:i,isConfirming:y,isConfirmed:o}}}}]);